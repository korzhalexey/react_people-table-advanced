{"version":3,"sources":["components/HeaderNavigation/HeaderNavigation.tsx","components/Header/Header.tsx","components/HomePage/HomePage.tsx","api/people.js","commonStrings.ts","components/TableHead/TableHead.tsx","components/PersonRow/PersonRow.tsx","components/TableBody/TableBody.tsx","components/Table/Table.tsx","components/TablePage/TablePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HeaderNavigation","className","to","exact","Header","HomePage","getPeople","fetch","then","response","json","people","map","child","mother","find","name","motherName","father","fatherName","catch","error","TABLE_NAME","TABLE_BORN","TABLE_DIED","ASCENDING","TableHead","sortableHeaders","searchParams","URLSearchParams","useLocation","search","headerFromUrl","get","history","useHistory","sortingOrder","header","onClick","set","push","toString","columnHeaderHandler","nanoid","PersonRow","person","table","sex","born","died","slug","personFather","personMather","TableBody","pathname","slice","lastIndexOf","cn","Table","TablePage","location","query","useState","setTable","tableFromServer","setTableFromServer","sortTable","filteredTable","sortedTable","sort","nextPerson","localeCompare","useEffect","lowerQuery","toLowerCase","filter","includes","type","placeholder","value","onChange","event","target","delete","length","color","height","width","NotFoundPage","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a0e4b10.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './HeaderNavigation.scss';\n\nconst HeaderNavigation: React.FC = () => (\n  <nav className=\"navigation\">\n    <ul className=\"navigation__list\">\n      <li className=\"navigation__item\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"navigation__link\"\n        >\n          Home\n        </NavLink>\n      </li>\n      <li className=\"navigation__item\">\n        <NavLink\n          to=\"/table\"\n          className=\"navigation__link\"\n        >\n          Table\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default HeaderNavigation;\n","import React from 'react';\nimport HeaderNavigation from '../HeaderNavigation/HeaderNavigation';\n\nconst Header: React.FC = () => (\n  <header>\n    <HeaderNavigation />\n  </header>\n);\n\nexport default Header;\n","import { FC } from 'react';\n\nconst HomePage:FC = () => {\n  return (\n    <div>\n      <h1>Home page</h1>\n    </div>\n  );\n};\n\nexport default HomePage;\n","const getPeople = () => (\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json())\n    .then(people => people.map(child => ({\n      ...child,\n      mother: people.find(mother => mother.name === child.motherName),\n      father: people.find(father => father.name === child.fatherName),\n    })))\n    .catch(error => error)\n);\n\nexport default getPeople;\n","export const TABLE_FATHER = 'father';\nexport const TABLE_MOTHER = 'mother';\nexport const TABLE_NAME = 'name';\nexport const TABLE_SEX = 'sex';\nexport const TABLE_BORN = 'born';\nexport const TABLE_DIED = 'died';\nexport const ASCENDING = 'asc';\nexport const DESCENDING = 'desc';\n","import { FC } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport {\n  TABLE_FATHER,\n  TABLE_MOTHER,\n  TABLE_NAME,\n  TABLE_SEX,\n  TABLE_BORN,\n  TABLE_DIED,\n  ASCENDING,\n  DESCENDING,\n} from '../../commonStrings';\n\nconst TableHead: FC = () => {\n  const sortableHeaders = [\n    TABLE_NAME,\n    TABLE_SEX,\n    TABLE_BORN,\n    TABLE_DIED,\n  ];\n\n  const searchParams = new URLSearchParams(useLocation().search);\n  const headerFromUrl = searchParams.get('sorted_by') || '';\n  const history = useHistory();\n  const sortingOrder = searchParams.get('sorting_order') || '';\n\n  const columnHeaderHandler = (header: string) => {\n    if (header === headerFromUrl) {\n      searchParams.set(\n        'sorting_order',\n        sortingOrder === ASCENDING ? DESCENDING : ASCENDING,\n      );\n    } else {\n      searchParams.set('sorted_by', header);\n      searchParams.set('sorting_order', ASCENDING);\n    }\n\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <thead>\n      <tr>\n        {\n          sortableHeaders.map((header) => (\n            <th\n              key={nanoid()}\n              className=\"sortable\"\n              onClick={() => {\n                columnHeaderHandler(header);\n              }}\n            >\n              {header}\n            </th>\n          ))\n        }\n        <th>{TABLE_FATHER}</th>\n        <th>{TABLE_MOTHER}</th>\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHead;\n","import { PropsWithChildren } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ITable } from '../../interfaces';\n\ninterface IPersonRow {\n  person: ITable,\n  table: ITable[],\n}\n\nconst PersonRow = ({ person, table }: PropsWithChildren<IPersonRow>) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    fatherName,\n    motherName,\n    slug,\n  } = person;\n\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n\n  return (\n    <>\n      <td>\n        <Link\n          className={sex === 'm' ? 'male' : 'female'}\n          to={`/table/${slug}?${searchParams.toString()}`}\n        >\n          {name}\n        </Link>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {\n          table.find((personFather) => personFather.name === fatherName)\n            ? (\n              <Link\n                to={`/table/${father?.slug}?${searchParams.toString()}`}\n                className=\"male\"\n              >\n                {fatherName}\n              </Link>\n            ) : (\n              <span className=\"not-found\">{fatherName}</span>\n            )\n        }\n      </td>\n      <td>\n        {\n          table.find((personMather) => personMather.name === motherName)\n            ? (\n              <Link\n                to={`/table/${mother?.slug}?${searchParams.toString()}`}\n                className=\"female\"\n              >\n                {motherName}\n              </Link>\n            ) : (\n              <span className=\"not-found\">{motherName}</span>\n            )\n        }\n      </td>\n    </>\n  );\n};\n\nexport default PersonRow;\n","import { FC } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport cn from 'classnames';\nimport PersonRow from '../PersonRow/PersonRow';\nimport { ITable } from '../../interfaces';\n\ninterface ITableBody {\n  table: ITable[],\n}\n\nconst TableBody: FC<ITableBody> = ({ table }) => {\n  const { pathname } = useLocation();\n  const slug = pathname.slice(pathname.lastIndexOf('/') + 1);\n\n  return (\n    <tbody>\n      {\n        table?.map((person) => (\n          <tr\n            key={nanoid()}\n            className={cn({\n              'selected-row': slug === person.slug,\n            })}\n          >\n            <PersonRow\n              person={person}\n              table={table}\n            />\n          </tr>\n        ))\n      }\n    </tbody>\n  );\n};\n\nexport default TableBody;\n","import { FC } from 'react';\nimport TableHead from '../TableHead/TableHead';\nimport TableBody from '../TableBody/TableBody';\nimport { ITable } from '../../interfaces';\n\nimport './Table.scss';\n\ninterface ITableComponent {\n  table: ITable[]\n}\n\nconst Table: FC<ITableComponent> = ({ table }) => (\n  <table>\n    <TableHead />\n\n    <TableBody\n      table={table}\n    />\n  </table>\n);\n\nexport default Table;\n","import { useState, useEffect, ChangeEvent } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ClipLoader from 'react-loader-spinner';\nimport getPeople from '../../api/people';\nimport Table from '../Table/Table';\nimport { ITable } from '../../interfaces';\n\nimport './TablePage.scss';\n\nimport {\n  TABLE_NAME,\n  TABLE_SEX,\n  TABLE_BORN,\n  TABLE_DIED,\n  ASCENDING,\n} from '../../commonStrings';\n\nconst TablePage = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [table, setTable] = useState<ITable[]>();\n  const [tableFromServer, setTableFromServer] = useState<ITable[]>();\n  const headerFromUrl = searchParams.get('sorted_by') || '';\n  const sortingOrder = searchParams.get('sorting_order') || '';\n\n  const sortTable = (filteredTable?: ITable[]) => {\n    let sortedTable: ITable[] = [];\n\n    if (filteredTable) {\n      sortedTable = [...filteredTable];\n    } else if (table) {\n      sortedTable = [...table];\n    }\n\n    if (sortedTable) {\n      sortedTable?.sort((person: ITable, nextPerson: ITable) => {\n        if (headerFromUrl === TABLE_NAME || headerFromUrl === TABLE_SEX) {\n          return sortingOrder === ASCENDING\n            ? person[headerFromUrl].localeCompare(nextPerson[headerFromUrl])\n            : nextPerson[headerFromUrl].localeCompare(person[headerFromUrl]);\n        }\n\n        if (headerFromUrl === TABLE_BORN || headerFromUrl === TABLE_DIED) {\n          return sortingOrder === ASCENDING\n            ? person[headerFromUrl] - nextPerson[headerFromUrl]\n            : nextPerson[headerFromUrl] - person[headerFromUrl];\n        }\n\n        return 0;\n      });\n\n      setTable(sortedTable);\n    }\n  };\n\n  useEffect(() => {\n    getPeople().then(setTableFromServer);\n\n    sortTable();\n  }, []);\n\n  useEffect(() => {\n    if (query) {\n      const lowerQuery = query.toLowerCase();\n      const filteredTable = tableFromServer?.filter(person => (\n        person.name.toLowerCase().includes(lowerQuery)\n        || person.fatherName?.toLowerCase().includes(lowerQuery)\n        || person.motherName?.toLowerCase().includes(lowerQuery)\n      ));\n\n      setTable(filteredTable);\n      sortTable(filteredTable);\n    } else {\n      setTable(tableFromServer);\n      sortTable(tableFromServer);\n    }\n  }, [tableFromServer, query]);\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value) {\n      searchParams.set('query', event.target.value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  useEffect(() => {\n    sortTable();\n  }, [headerFromUrl, sortingOrder]);\n\n  return (\n    <>\n      <h1>People page</h1>\n\n      {\n        table ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Filter\"\n              value={query}\n              onChange={handleQueryChange}\n            />\n\n            {\n              table.length > 0 ? (\n                <Table\n                  table={table}\n                />\n              ) : (\n                <article className=\"message\">\n                  <div className=\"message__body\">\n                    <p>Nothing was found</p>\n                  </div>\n                </article>\n              )\n            }\n          </>\n        ) : (\n          <div className=\"loader\">\n            <ClipLoader\n              type=\"Circles\"\n              color=\"#039\"\n              height={100}\n              width={100}\n            />\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nexport default TablePage;\n","const NotFoundPage = () => (\n  <p>Page not found</p>\n);\n\nexport default NotFoundPage;\n","import { FC } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport HomePage from './components/HomePage/HomePage';\nimport TablePage from './components/TablePage/TablePage';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\n\nimport './App.scss';\n\nconst App: FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          component={HomePage}\n        />\n\n        <Route\n          path=\"/table/:user?\"\n          component={TablePage}\n        />\n\n        <Redirect\n          from=\"/home\"\n          to=\"/\"\n        />\n\n        <NotFoundPage />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}